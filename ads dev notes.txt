When first starting the dev vm
-load eHub plc project - do NOT activate it or put it in RUN mode.
-run the NewAds console app
-result:
    Ads Error: 1 : [AdsClient:TwinCAT.Ads.Internal.INotificationReceiver.OnNotificationError()] 
    Exception: Couldn't register for AdsState change Notifications on the connected ADS Server. 
    Don't register for AdsClient.AdsStateChanged events! (Target port could not be found. 
    (AdsErrorCode: 6, 0x6))
    ...
    Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll
    The program '[6684] NewAds.exe' has exited with code 0 (0x0).

the first part (Ads Error 1...) did not throw an exception when I stepped thru the code.
The exception was thrown when I hit the "client.AddDeviceNotification("vMessages.Msgs_SCP.Ready",..." 
code.

Dec 17 - Tue
===========================================
Try again with some code re-shuffling and a new invalid notification handler
When first starting the dev vm
-load eHub plc project - do NOT activate it or put it in RUN mode.
-run the NewAds console app
-result: on the line where I ask for the Ads state (client.ReadState().AdsState) it throws
    Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll
    Target port could not be found.
reading the ads state occurs immediately after the Ads.Connect call

repeating the above but activating the project and loading it and running it, I don't get that
"Don't register for AdsClient.AdsStateChanged events!" in the output window.

Running PLC app. Running Ads app. 
Ads has seen messages.
Open plc program, edit it, login with on-line change
no indication that the plc ads state has changed.
ask plc to create more msgs
msgs recvd by the ads app
I was expecting some sort of exception. guess not.

repeating the above but this time with "Login with download"
got this in the debugger:
    AdsStateChanged(Stop)
    Client_AdsNotificationsInvalidated()
    Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll
    The program '[10068] NewAds.exe' has exited with code 0 (0x0).
got this on the apps console:
    Ads was NOT happy: Key could not be found in hashtable


repeating the above
    I think it faulted when I try to DeleteDeviceNotification(notificationHandle)
    I think bc it's 0. Added Trace statements to verify
Login with download and all this happened:
    AdsStateChanged(Stop)
    Client_AdsNotificationsInvalidated()
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 0
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 3
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 4
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 5
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 6
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 7
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 8
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 9
    Client_AdsNotification()
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 10
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 11
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 12
At this point I exited the program because I wanted to log all this down

Reran the above. But this time:
After Login with download I hit play on the plc program to let it run again.
then I asked it to start making msgs again.
Exception!
Here's the debugger:
    AdsStateChanged(Run)        -- this is when I hit play
    Client_AdsNotification()
    Client_AdsNotification()
    Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll        -- where did this come from????
    exception when processing sending buffer    -- this is in the handle tag change - or is it.
    Client_AdsNotification()
    Client_AdsNotification()
    Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll
    exception when processing sending buffer
    Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll
    An exception of type 'TwinCAT.Ads.AdsErrorException' occurred in TwinCAT.Ads.dll but was not handled in user code
    Symbol version is invalid. (AdsErrorCode: 1809, 0x711)
Not sure why I got 4 AdsNotification events with an exception in the middle and then another after.
I'm starting to wonder if the AdsNotification covers more than just a tag change.


Repeating above. I added some logging to the AdsNotification function to list out some the eventargs
Made a change - logged in with download
    AdsStateChanged(Stop)
    Client_AdsNotificationsInvalidated()
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 0
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 3
    Client_AdsNotification()        
-- why am I getting these? bc when the loop comes back around it re-registers the buffer
-- and you get an initial value
        e.handle 3
        e.Data.Span[0] = 0
        ackHandle = 0
        bufferHandle = 0
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 4
    Client_AdsNotification()
        e.handle 4
        e.Data.Span[0] = 0
        ackHandle = 0
        bufferHandle = 0
    AdsStateChanged(Run)            -- I hit play
    Client_AdsNotification()
        e.handle 5
        e.Data.Span[0] = 0
        ackHandle = 0
        bufferHandle = 0
plc program is still running - no faults in the console app yet
ask plc to make more msgs...
faults immediately:
    Client_AdsNotification()
        e.handle 5
        e.Data.Span[0] = 1
        ackHandle = 0
        bufferHandle = 0
    Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll        -- WHERE IS THIS COMING FROM????
    exception when processing sending buffer
    Client_AdsNotification()
        e.handle 5
        e.Data.Span[0] = 0
        ackHandle = 461373443
        bufferHandle = 461373444
    Client_AdsNotification()
        e.handle 5
        e.Data.Span[0] = 1
        ackHandle = 461373443
        bufferHandle = 461373444
    Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll
    exception when processing sending buffer
    Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll
    An exception of type 'TwinCAT.Ads.AdsErrorException' occurred in TwinCAT.Ads.dll but was not handled in user code
    Symbol version is invalid. (AdsErrorCode: 1809, 0x711)
when the dust settled and the debugger popped up. it was stopped on the client.DeleteVariableHandle(bufferHandle)
I'm thinkg that maybe not do global handles and keep it local. what kind of overhead could that cause?

I did that, just use local vars for the ack and buffer handle and it worked perfectly.


repeat but this time my edit was to change the code in the main prgram - exception
    AdsStateChanged(Stop)
    Client_AdsNotificationsInvalidated()
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 0
    The thread '.NET TP Worker' (9352) has exited with code 0 (0x0).
    The thread '.NET TP Worker' (4720) has exited with code 0 (0x0).
    AdsStateChanged(Run)        -- this was me hitting play
    Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll
    The program '[10192] NewAds.exe' has exited with code 0 (0x0).
the console had this to say:
    Symbol version is invalid
I need to try to keep a running log of the devicenotification handle
notice it was 0 when the inner loop exited. what happened in the meantime?
I should log what it is when I add the notification
-doh didn't get the debugger state. I don't know on what it triggered the exception

try again....
this time I did two spearete edits to the "process buffer" pou and I ended each with a "login with download"
the first time it was fine. the second if faulted:
Console:
    Symbol version is invalid
the debugger never stopped on any line
here's the debugger output tho:
    AdsStateChanged(Run)            -- me hitting PLAY
    Client_AdsNotification()
        e.handle 7
        e.Data.Span[0] = 0
    Client_AdsNotification()
        e.handle 7
        e.Data.Span[0] = 1
    Client_AdsNotification()
        e.handle 7
        e.Data.Span[0] = 0
    Client_AdsNotification()
        e.handle 7
        e.Data.Span[0] = 1
    Client_AdsNotification()
        e.handle 7
        e.Data.Span[0] = 0
    AdsStateChanged(Stop)           -- the 2nd on-line edit
    Client_AdsNotificationsInvalidated()
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 0
    Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll
    The program '[4780] NewAds.exe' has exited with code 0 (0x0).
My intial question is what was the notifHandle before the loop ended.
IOW if, in the inner loop it says, hey get me a handle, but then ads says it's stopped
(not that the handle is bad) and the loop drops out then (async) the Invalidated gets called, setting the
... nah, can't see it. I think I'm onto something, just can't get me head wrapped around it.

Dec 18 - Wed
====================================
first start up. I didn't activate the TC project, but just ran the console app. 
It faulted with:
    Target port could not be found.
In the debugger, if I step thru the code from the initial AdsClient instantiation, I
get the following in the debugger, but the app doesn't fault:
    Ads Error: 1 : [AdsClient:TwinCAT.Ads.Internal.INotificationReceiver.OnNotificationError()] Exception: 
        Couldn't register for AdsState change Notifications on the connected ADS Server. Don't register 
        for AdsClient.AdsStateChanged events! (Target port could not be found. (AdsErrorCode: 6, 0x6))
    Ads Error: 1 : [AdsClient:TwinCAT.Ads.Internal.INotificationReceiver.OnNotificationError()] Exception: 
        Couldn't register for SymbolVersion change Notifications on the connected ADS Server. Don't register 
        for AdsClient.SymbolVersionChanged events! (Target port could not be found. (AdsErrorCode: 6, 0x6))
The code is the following:
    client.AdsStateChanged += Client_AdsStateChanged;

    // supposed to trigger when the plc program has been restarted
    client.AdsNotificationsInvalidated += Client_AdsNotificationsInvalidated;
    client.AdsSymbolVersionChanged += Client_AdsSymbolVersionChanged;

    // Add the Notification event handler
    client.AdsNotification += Client_AdsNotification;       // used with the buffer ready event
Notice that there was no Ads Error on the AdsNotificationsInvalidated event assignment. Odd; I was getting them yesterday.
And no ads error on the simple AdsNotification.
Continuing to step thru, it finally fatally faults on:
    notificationHandle = client.AddDeviceNotification("vMessages.Msgs_SCP.Ready"...
Debugger throws this:
    TwinCAT.Ads.AdsErrorException: 'Target port could not be found. (AdsErrorCode: 6, 0x6)'
why this one faults and not the other 2 I don't know.


Carrying on...
Activating the TC project. Set TC to run mode. Did not do a download.
Ran the console app. It hard faulted in the same spot as above but I didn't get the other
two "Ads Error: 1:..." messages in the debugger.

Carrying on... 
do a TC download and play
create a few msgs
did a TC code edit and login with download
faulted. Here's the debugger:
    AdsStateChanged(Stop)
    Inner while loop exited.
        AdsIsRunning = False
    AdsSymbolVersionChanged
        notificationHandle = 3
    Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll
and the console:
    Key could not be found in a hashtable.
what is different yesterday -vs- today? yesterday it worked at least once. maybe luck of the draw?


try again. this time I added trace statements before every single line of code.
debugger log:
    client.Connect()
    registering for the AdsStateChanged event
    registering for the AdsNotificationsInvalidated event
    registering for the AdsSymbolVersionChanged event
    AdsStateChanged(Run)
    registering for the AdsNotification event
    adding ready tag to the notification
       returned handle 3
    Client_AdsNotification()
        e.handle 3
        e.Data.Span[0] = 0
    Client_AdsNotification()            // me creating a msg
        e.handle 3
        e.Data.Span[0] = 1
    creating handle for the Ack tag
    creating handle for the buffer tag
    reading buffer tag
    setting the Ack tag = TRUE
    deleting handle for the buffer tag
    deleting handle for the ack tag
    Client_AdsNotification()
        e.handle 3
        e.Data.Span[0] = 0
        
    // TC code changed by me and then login with download
    AdsStateChanged(Stop)
    AdsSymbolVersionChanged
    Inner while loop exited.
        AdsIsRunning = False
        notificationHandle = 3
    registering for the 
    Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll

note that I never got the Client_AdsNotificationsInvalidated event which would have reset the notificationHandle to 0


try again: I added code to AdsSymbolVersionChanged to call client.CleanupSymbolTable and reset notificationHandle to 0
debugger:
    client.Connect()
    registering for the AdsStateChanged event
    registering for the AdsNotificationsInvalidated event
    registering for the AdsSymbolVersionChanged event
    AdsStateChanged(Run)
    registering for the AdsNotification event
    adding ready tag to the notification
        returned handle 3
    Client_AdsNotification()
        e.handle 3
        e.Data.Span[0] = 0
    Client_AdsNotification()
        e.handle 3
        e.Data.Span[0] = 1
    creating handle for the Ack tag
    creating handle for the buffer tag
    reading buffer tag
    setting the Ack tag = TRUE
    deleting handle for the buffer tag
    deleting handle for the ack tag
    Client_AdsNotification()
        e.handle 3
        e.Data.Span[0] = 0
    AdsStateChanged(Stop)           // sets AdsIsRunning = FALSE
M   Inner while loop exited.
M       AdsIsRunning = False
T   AdsSymbolVersionChanged
M       notificationHandle = 3
M   deregistering the notificationHandle    // notificationHandle is > 0
T       getting the AdsClient object
?   Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll
T       calling CleanupSymbolTable
T       setting notificationHandle = 0
    The program '[10136] NewAds.exe' has exited with code 0 (0x0).
For the above, I prefixed lines with an M for main thread and T for side thread.

It looks like a race condition. AdsSymbolVersionChanged doesn't finish before the main thread tries
to delete the Ready tag notification.

try again, this time I'm not letting the AdsStateChange do anything other than log (keeps AdsIsRunning = true)
debugger:
    client.Connect()
    registering for the AdsStateChanged event
    registering for the AdsNotificationsInvalidated event
    registering for the AdsSymbolVersionChanged event
    AdsStateChanged(Run)
    registering for the AdsNotification event
    adding ready tag to the notification
        returned handle 3
    Client_AdsNotification()        
        e.handle 3
        e.Data.Span[0] = 0
    Client_AdsNotification()                    // me creating a msg
        e.handle 3
        e.Data.Span[0] = 1
        creating handle for the Ack tag
        creating handle for the buffer tag
        reading buffer tag
        setting the Ack tag = TRUE
        deleting handle for the buffer tag
        deleting handle for the ack tag
    Client_AdsNotification()
        e.handle 3
        e.Data.Span[0] = 0
                                                // me making TC code change then login with download
    AdsStateChanged(Stop)                       // now coded to ONLY log, nothing else
    AdsSymbolVersionChanged
        getting the AdsClient object
        calling CleanupSymbolTable
        setting notificationHandle = 0
    Inner while loop exited.
        AdsIsRunning = True
        notificationHandle = 0
    AdsStateChanged(Run)                        // after login, I hit play
    adding ready tag to the notification
        returned handle 4
    Client_AdsNotification()                    // you get this when you first add the notification
        e.handle 4
        e.Data.Span[0] = 0
    Client_AdsNotification()                    // actual change because I created a new msg
        e.handle 4
        e.Data.Span[0] = 1
        creating handle for the Ack tag
        creating handle for the buffer tag
        reading buffer tag
        setting the Ack tag = TRUE
        deleting handle for the buffer tag
        deleting handle for the ack tag
    Client_AdsNotification()
        e.handle 4
        e.Data.Span[0] = 0
                                                // and it's still running
                                                // created a couple new msgs
                                                // make another TC code change
    AdsStateChanged(Stop)
    AdsSymbolVersionChanged
        getting the AdsClient object
        calling CleanupSymbolTable
        setting notificationHandle = 0
    Inner while loop exited.
        AdsIsRunning = True
        notificationHandle = 0
    AdsStateChanged(Run)
    adding ready tag to the notification
    Exception thrown: 'TwinCAT.Ads.AdsErrorException' in TwinCAT.Ads.dll    
// why did this throw??? by the logging it was the adding the ready tag to the notifications
    The program '[400] NewAds.exe' has exited with code 0 (0x0).
Console shows:
    "Symbol version is invalid"
    


==================================================
Regroup: What do I know so far???

-when you make an on-line change and login with download the app gets the following events in this order:
    1. Ads State change event to a STOP
    2. Symbol Version change event
-AdsNotificationsInvalidated seems to be useless today. what did I change to cause that?


On program start these things need to happen:
    create an AdsClient
    Connect();
    register a 
    

====================================================
Totally re-wrote the app to allow AdsState changes to register tags and notifications











